package com.app.ll;

public class SinglyCircularLinkedList {

	static class Node{
		Node next;
		int data;
		public Node(int data) {
			next = null;
			this.data = data;
		}
	}
	
	private Node head;
	public SinglyCircularLinkedList() {
		head = null;
	}
	
	public boolean isEmpty() {
		return head==null;
	}
	
	public void addFirst(int data) {
		Node newNode = new Node(data);
		if(isEmpty()) {
			newNode.next = head;
			head = newNode;
			head.next=head;	
		}else {
			Node trav = head;
			while(trav.next!=head) {
				trav = trav.next;
			}
			trav.next = newNode;
			newNode.next = head;
			head = newNode;
		}
		
	}
	
	public void addLast(int data) {
		Node newNode = new Node(data);
		if(isEmpty()) {
			newNode.next = head;
			head = newNode;
			head.next=head;	
		}else {
			Node trav = head;
			while(trav.next!=head) {
				trav = trav.next;
			}
			trav.next = newNode;
			newNode.next = head;
			
		}
	}
	
	public void delFirst() {
		if(isEmpty()) {
			throw new RuntimeException("List is empty");
		}
		if(head.next == head) {
			head=null;
		}else {
			Node trav = head;
			while(trav.next!=head) {
				trav=trav.next;
			}
			head = head.next;
			trav.next = head;
		}	
	}
	
	public void delLast() {
		if(isEmpty())
			throw new RuntimeException("List is empty");
		
		if(head.next == head) {
			head=null;
		}else {
			Node trav= head;
			while(trav.next!=null) {
				trav = trav.next;
			}
		}
			
	
	}
}
